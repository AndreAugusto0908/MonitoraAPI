// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonitoraAPI.Infra;

#nullable disable

namespace MonitoraAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250121162544_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MonitoraAPI.Models.EspEntity", b =>
                {
                    b.Property<string>("idESP")
                        .HasColumnType("varchar(255)");

                    b.HasKey("idESP");

                    b.ToTable("EspEntities");
                });

            modelBuilder.Entity("MonitoraAPI.Models.TemperaturaDados", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("EspEntityidESP")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("data")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("temperatura")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("EspEntityidESP");

                    b.ToTable("TemperaturaDados");
                });

            modelBuilder.Entity("MonitoraAPI.Models.TemperaturaDados", b =>
                {
                    b.HasOne("MonitoraAPI.Models.EspEntity", null)
                        .WithMany("temperaturaDados")
                        .HasForeignKey("EspEntityidESP")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MonitoraAPI.Models.EspEntity", b =>
                {
                    b.Navigation("temperaturaDados");
                });
#pragma warning restore 612, 618
        }
    }
}
